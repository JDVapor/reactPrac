{"ast":null,"code":"var _jsxFileName = \"/Users/jdvapor/Documents/rand/practiceCodingProjects/scrimba/reactPrac/src/GrandParent.js\";\nimport React from \"react\";\nimport Parent from \"./Parent\";\n\nconst GrandParent = props => {\n  console.log(\"[👴🏼]   [ ]   [ ]   [ ] rendered\");\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"I'm a GrandParent Component\"), React.createElement(Parent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }), React.createElement(Parent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n}; // function areEqual(prevProps, nextProps) {\n//   /*\n//   return true if passing nextProps to render would return\n//   the same result as passing prevProps to render,\n//   otherwise return false\n//   */\n// }\n\n\nexport default React.memo(GrandParent\n/*, areEqual*/\n);","map":{"version":3,"sources":["/Users/jdvapor/Documents/rand/practiceCodingProjects/scrimba/reactPrac/src/GrandParent.js"],"names":["React","Parent","GrandParent","props","console","log","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CATD,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeL,KAAK,CAACM,IAAN,CAAWJ;AAAW;AAAtB,CAAf","sourcesContent":["import React from \"react\"\nimport Parent from \"./Parent\"\n\nconst GrandParent = props => {\n    console.log(\"[👴🏼]   [ ]   [ ]   [ ] rendered\")\n    return (\n        <div>\n            <p>I'm a GrandParent Component</p>\n            <Parent />\n            <Parent />\n        </div>\n    )\n}\n\n// function areEqual(prevProps, nextProps) {\n//   /*\n//   return true if passing nextProps to render would return\n//   the same result as passing prevProps to render,\n//   otherwise return false\n//   */\n// }\n\nexport default React.memo(GrandParent/*, areEqual*/)\n"]},"metadata":{},"sourceType":"module"}